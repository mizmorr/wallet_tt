services:
  app:
    container_name: provider
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - pgbouncer
    env_file:
      - config/config.env
    networks:
      - app-network
  db:
    image: postgres:latest
    restart: always
    container_name: postgre
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=post
      - POSTGRES_DB=wallets
    volumes:
      - ./store/pg/pgdata:/var/lib/postgresql/data:Z
      - ./migrations/up:/docker-entrypoint-initdb.d:Z
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres -d wallets" ]
        interval: 30s
        timeout: 10s
        retries: 5
    networks:
      - app-network
  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    restart: always
    ports:
      - "6432:6432"
    volumes:
      - ./store/pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:Z
      - ./store/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt:Z
    depends_on:
      - db
    networks:
      - app-network
    healthcheck:
        test: ["CMD", "pg_isready", "-h", "db", "-U","postgres"]
        interval: 10s


networks:
  app-network:
    driver: bridge


